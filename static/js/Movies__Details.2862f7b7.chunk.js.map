{"version":3,"sources":["Page/MoviesDetailsPage/MoviesDetailsPage.module.css","Page/MoviesDetailsPage/MoviesDetailsPage.jsx"],"names":["module","exports","Cast","lazy","Reviews","MoviesDetailsPage","useState","movie","setMovie","id","useParams","match","useRouteMatch","history","useHistory","useEffect","fetchMoviesDetails","then","data","className","s","movieCard","type","onClick","goBack","movieInfo","poster_path","src","alt","title","image","movieDetails","release_date","popularity","overview","genresList","genres","map","genre","genresList__item","name","additionalInformation","to","url","fallback","exact","path"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,qCAAqC,MAAQ,iCAAiC,UAAY,qCAAqC,aAAe,wCAAwC,WAAa,sCAAsC,iBAAmB,4CAA4C,sBAAwB,mD,gHCKxVC,EAAOC,gBAAK,kBAAK,gCACjBC,EAAUD,gBAAK,kBAAK,gCA2EXE,UAzEW,WACxB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAOC,cAAPD,GACFE,EAAQC,cACRC,EAAUC,cAiBhBC,qBAAU,WACRC,YAAmBP,GAAIQ,MAAK,SAAAC,GAC1BV,EAASU,QAEV,CAACT,IAMJ,OACE,sBAAKU,UAAWC,IAAEC,UAAlB,UACE,wBAAQC,KAAK,SAASC,QANL,WACnBV,EAAQW,UAKN,qBACA,sBAAKL,UAAWC,IAAEK,UAAlB,UACGlB,EAAMmB,aAAe,qBAAKC,IAAG,UA9BxB,mCA8BwB,OAAWpB,EAAMmB,aAAeE,IAAKrB,EAAMsB,MAAOV,UAAWC,IAAEU,QAC/F,sBAAKX,UAAWC,IAAEW,aAAlB,UACE,+BAAKxB,EAAMsB,MAAX,KAAoBtB,EAAMyB,aAA1B,OACA,6CAAgBzB,EAAM0B,cACtB,0CACA,4BAAI1B,EAAM2B,WACV,wCACA,oBAAIf,UAAWC,IAAEe,WAAjB,SACG5B,EAAM6B,QAAU7B,EAAM6B,OAAOC,KAAI,SAAAC,GAChC,OACE,oBAAqBnB,UAAWC,IAAEmB,iBAAlC,SAAqDD,EAAME,MAAlDF,EAAME,iBAOvB,sBAAKrB,UAAWC,IAAEqB,sBAAlB,UACE,wDACA,+BACE,6BAAI,cAAC,IAAD,CAASC,GAAE,UAAK/B,EAAMgC,IAAX,SAAX,oBACJ,6BAAI,cAAC,IAAD,CAASD,GAAE,UAAK/B,EAAMgC,IAAX,YAAX,0BAEN,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAKnC,EAAMmC,KAAX,SAAjB,SACE,cAAC5C,EAAD,MAEF,cAAC,IAAD,CAAO4C,KAAI,UAAKnC,EAAMmC,KAAX,YAAX,SACE,cAAC1C,EAAD","file":"static/js/Movies__Details.2862f7b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"MoviesDetailsPage_movieCard__phzVg\",\"image\":\"MoviesDetailsPage_image__35hqw\",\"movieInfo\":\"MoviesDetailsPage_movieInfo__3d3KJ\",\"movieDetails\":\"MoviesDetailsPage_movieDetails__1CJkD\",\"genresList\":\"MoviesDetailsPage_genresList__2RNdJ\",\"genresList__item\":\"MoviesDetailsPage_genresList__item__RdaU8\",\"additionalInformation\":\"MoviesDetailsPage_additionalInformation__3xydc\"};","import { useState, useEffect,Suspense, lazy  } from 'react'\r\nimport { useParams, NavLink,Switch,Route,useRouteMatch,useHistory } from 'react-router-dom'\r\nimport { fetchMoviesDetails } from '../../services/api'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport s from './MoviesDetailsPage.module.css'\r\n\r\nconst Cast = lazy(()=> import('../Cast/Cast' /* webpackChunkName:  \"Cast__Page\" */),)\r\nconst Reviews = lazy(()=> import('../Reviews/Reviews' /* webpackChunkName:  \"Reviews__Page\" */),)\r\n\r\nconst MoviesDetailsPage = () => {\r\n  const [movie, setMovie] = useState({})\r\n  const { id } = useParams()\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const url = 'https://image.tmdb.org/t/p/w500'\r\n\r\n  //    useEffect(() => {\r\n  //   const getMoviesById = async () => {\r\n  //     try {\r\n  //       const movies = await fetchMoviesDetails(id);\r\n\r\n  //       setMovie(movies);\r\n  //     }\r\n  //     catch (error) {\r\n  //       console.log(error);\r\n  //     }\r\n  //   };\r\n  //   getMoviesById();\r\n  // }, [id]);\r\n    \r\n  useEffect(() => {\r\n    fetchMoviesDetails(id).then(data => {\r\n      setMovie(data)\r\n    })\r\n  }, [id])\r\n\r\n  const handelGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className={s.movieCard}>\r\n      <button type='button' onClick={handelGoBack}>Go back</button>\r\n      <div className={s.movieInfo}>\r\n        {movie.poster_path && <img src={`${url}${movie.poster_path}`} alt={movie.title} className={s.image}/>}\r\n      <div className={s.movieDetails}>\r\n        <h2>{movie.title} ({movie.release_date})</h2>\r\n        <p>User Score: {movie.popularity}</p>\r\n        <h3>Overview</h3>\r\n        <p>{movie.overview}</p>\r\n        <h4>Genres</h4>\r\n        <ul className={s.genresList}>\r\n          {movie.genres && movie.genres.map(genre => {\r\n            return (\r\n              <li key={genre.name} className={s.genresList__item}>{genre.name}</li>\r\n            )\r\n          })}\r\n                    \r\n        </ul>\r\n      </div>\r\n      </div>\r\n      <div className={s.additionalInformation}>\r\n        <h3>Additional information</h3>\r\n        <ul>\r\n          <li><NavLink to={`${match.url}/cast`}>Cast</NavLink></li>\r\n          <li><NavLink to={`${match.url}/reviews`}>Reviews</NavLink></li>\r\n        </ul>\r\n        <Suspense fallback={<Loader/>}>\r\n          <Switch>\r\n            <Route exact path={`${match.path}/cast`}>\r\n              <Cast />\r\n            </Route>\r\n            <Route path={`${match.path}/reviews`}>\r\n              <Reviews />\r\n            </Route>\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MoviesDetailsPage;\r\n"],"sourceRoot":""}